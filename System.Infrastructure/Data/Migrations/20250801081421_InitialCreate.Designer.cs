// <auto-generated />
using System;
using System.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace System.Infrastructure.Data.Migrations
{
    [DbContext(typeof(SystemDBContext))]
    [Migration("20250801081421_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("System.Infrastructure.Branches", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("BranchName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("System.Infrastructure.Cashier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("CashierName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.ToTable("Cashier");
                });

            modelBuilder.Entity("System.Infrastructure.Cities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CityName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("");

                    b.HasKey("ID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("System.Infrastructure.InvoiceDetails", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("InvoiceHeaderID")
                        .HasColumnType("bigint");

                    b.Property<double>("ItemCount")
                        .HasColumnType("float");

                    b.Property<string>("ItemName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("");

                    b.Property<double>("ItemPrice")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("InvoiceHeaderID");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("System.Infrastructure.InvoiceHeader", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<int?>("CashierID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("");

                    b.Property<DateTime>("Invoicedate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.HasIndex("CashierID");

                    b.ToTable("InvoiceHeader");
                });

            modelBuilder.Entity("System.Infrastructure.Branches", b =>
                {
                    b.HasOne("System.Infrastructure.Cities", "City")
                        .WithMany("Branches")
                        .HasForeignKey("CityID")
                        .IsRequired()
                        .HasConstraintName("FK_Branches_Cities");

                    b.Navigation("City");
                });

            modelBuilder.Entity("System.Infrastructure.Cashier", b =>
                {
                    b.HasOne("System.Infrastructure.Branches", "Branch")
                        .WithMany("Cashier")
                        .HasForeignKey("BranchID")
                        .IsRequired()
                        .HasConstraintName("FK_Cashier_Branches");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("System.Infrastructure.InvoiceDetails", b =>
                {
                    b.HasOne("System.Infrastructure.InvoiceHeader", "InvoiceHeader")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceHeaderID")
                        .IsRequired()
                        .HasConstraintName("FK_InvoiceDetails_InvoiceHeader");

                    b.Navigation("InvoiceHeader");
                });

            modelBuilder.Entity("System.Infrastructure.InvoiceHeader", b =>
                {
                    b.HasOne("System.Infrastructure.Branches", "Branch")
                        .WithMany("InvoiceHeader")
                        .HasForeignKey("BranchID")
                        .IsRequired()
                        .HasConstraintName("FK_InvoiceHeader_Branches");

                    b.HasOne("System.Infrastructure.Cashier", "Cashier")
                        .WithMany("InvoiceHeader")
                        .HasForeignKey("CashierID")
                        .HasConstraintName("FK_InvoiceHeader_Cashier");

                    b.Navigation("Branch");

                    b.Navigation("Cashier");
                });

            modelBuilder.Entity("System.Infrastructure.Branches", b =>
                {
                    b.Navigation("Cashier");

                    b.Navigation("InvoiceHeader");
                });

            modelBuilder.Entity("System.Infrastructure.Cashier", b =>
                {
                    b.Navigation("InvoiceHeader");
                });

            modelBuilder.Entity("System.Infrastructure.Cities", b =>
                {
                    b.Navigation("Branches");
                });

            modelBuilder.Entity("System.Infrastructure.InvoiceHeader", b =>
                {
                    b.Navigation("InvoiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
